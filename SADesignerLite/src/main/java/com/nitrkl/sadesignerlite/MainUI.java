/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.nitrkl.sadesignerlite;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;


/**
 *
 * @author hp
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     * Potato Comment
     */
    StructureWizardUI stw;
    public MainUI() {
        initComponents();
        this.buttons = new javax.swing.JToggleButton[]{
            DataFlowButton, 
            DataStoreButton, 
            DataProcessButton, 
            ExternalEntityButton,
            ExternalOutputButton,
            LabelButton
        };
        this.setTitle("SADesignerLite");
        WorkSpace.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ribbon = new javax.swing.JPanel();
        InsertShapesText = new javax.swing.JLabel();
        ShapeBar = new javax.swing.JToolBar();
        DataFlowButton = new javax.swing.JToggleButton();
        DataStoreButton = new javax.swing.JToggleButton();
        DataProcessButton = new javax.swing.JToggleButton();
        ExternalEntityButton = new javax.swing.JToggleButton();
        ExternalOutputButton = new javax.swing.JToggleButton();
        LabelButton = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        DebugText = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        DebugBar = new javax.swing.JToolBar();
        DebugButton = new javax.swing.JToggleButton();
        DecomposeText = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        DecomposeBar = new javax.swing.JToolBar();
        DecomposeButton = new javax.swing.JToggleButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        WorkSpace = new javax.swing.JScrollPane();
        LogArea = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewItem = new javax.swing.JMenuItem();
        OpenItem = new javax.swing.JMenuItem();
        SaveItem = new javax.swing.JMenuItem();
        SaveAsItem = new javax.swing.JMenuItem();
        ExportMenu = new javax.swing.JMenu();
        DDItem = new javax.swing.JMenuItem();
        ImageItem = new javax.swing.JMenuItem();
        PrintItem = new javax.swing.JMenuItem();
        CloseItem = new javax.swing.JMenuItem();
        ExitItem = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        HelpItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(200, 200, 200));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Ribbon.setBackground(new java.awt.Color(255, 255, 255));

        InsertShapesText.setText("Insert Shapes");

        ShapeBar.setBackground(new java.awt.Color(255, 255, 255));
        ShapeBar.setRollover(true);
        ShapeBar.setAutoscrolls(true);

        DataFlowButton.setText("Data Flow");
        DataFlowButton.setFocusable(false);
        DataFlowButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DataFlowButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DataFlowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataFlowButtonActionPerformed(evt);
            }
        });
        ShapeBar.add(DataFlowButton);

        DataStoreButton.setText("Data Store");
        DataStoreButton.setFocusable(false);
        DataStoreButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DataStoreButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DataStoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataStoreButtonActionPerformed(evt);
            }
        });
        ShapeBar.add(DataStoreButton);

        DataProcessButton.setText("Data Process");
        DataProcessButton.setFocusable(false);
        DataProcessButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DataProcessButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DataProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataProcessButtonActionPerformed(evt);
            }
        });
        ShapeBar.add(DataProcessButton);

        ExternalEntityButton.setText("External Entity");
        ExternalEntityButton.setFocusable(false);
        ExternalEntityButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ExternalEntityButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ExternalEntityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExternalEntityButtonActionPerformed(evt);
            }
        });
        ShapeBar.add(ExternalEntityButton);

        ExternalOutputButton.setText("External Output");
        ExternalOutputButton.setFocusable(false);
        ExternalOutputButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ExternalOutputButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ExternalOutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExternalOutputButtonActionPerformed(evt);
            }
        });
        ShapeBar.add(ExternalOutputButton);

        LabelButton.setText("Label");
        LabelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LabelButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        LabelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabelButtonActionPerformed(evt);
            }
        });
        ShapeBar.add(LabelButton);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        DebugText.setText("Debug");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        DebugBar.setBackground(new java.awt.Color(255, 255, 255));
        DebugBar.setBorder(null);
        DebugBar.setRollover(true);

        DebugButton.setText("Debug");
        DebugButton.setBorder(null);
        DebugButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DebugButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DebugButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebugButtonActionPerformed(evt);
            }
        });
        DebugBar.add(DebugButton);

        DecomposeText.setText("Decompose");

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        DecomposeBar.setBackground(new java.awt.Color(255, 255, 255));
        DecomposeBar.setBorder(null);
        DecomposeBar.setRollover(true);

        DecomposeButton.setText("Decompose");
        DecomposeButton.setBorder(null);
        DecomposeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DecomposeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DecomposeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecomposeButtonActionPerformed(evt);
            }
        });
        DecomposeBar.add(DecomposeButton);

        javax.swing.GroupLayout RibbonLayout = new javax.swing.GroupLayout(Ribbon);
        Ribbon.setLayout(RibbonLayout);
        RibbonLayout.setHorizontalGroup(
            RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RibbonLayout.createSequentialGroup()
                .addGroup(RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RibbonLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(InsertShapesText))
                    .addComponent(ShapeBar, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DebugText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DebugBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DecomposeText)
                    .addComponent(DecomposeBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RibbonLayout.setVerticalGroup(
            RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(RibbonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RibbonLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(RibbonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RibbonLayout.createSequentialGroup()
                                .addComponent(InsertShapesText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ShapeBar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RibbonLayout.createSequentialGroup()
                                .addComponent(DebugText)
                                .addGap(8, 8, 8)
                                .addComponent(DebugBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(RibbonLayout.createSequentialGroup()
                        .addComponent(DecomposeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DecomposeBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jSplitPane2.setDividerLocation(300);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        WorkSpace.setBackground(new java.awt.Color(255, 255, 255));
        WorkSpace.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(WorkSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(WorkSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPanel3);

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setRows(5);
        logArea.setBorder(null);
        logArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logAreaMouseEntered(evt);
            }
        });
        LogArea.setViewportView(logArea);

        jSplitPane2.setRightComponent(LogArea);

        FileMenu.setText("File");

        NewItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        NewItem.setText("New");
        NewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewItemActionPerformed(evt);
            }
        });
        FileMenu.add(NewItem);

        OpenItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        OpenItem.setText("Open");
        OpenItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenItemActionPerformed(evt);
            }
        });
        FileMenu.add(OpenItem);

        SaveItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        SaveItem.setText("Save");
        SaveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveItemActionPerformed(evt);
            }
        });
        FileMenu.add(SaveItem);

        SaveAsItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        SaveAsItem.setText("Save As");
        SaveAsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsItemActionPerformed(evt);
            }
        });
        FileMenu.add(SaveAsItem);

        ExportMenu.setText("Export");

        DDItem.setText("Data Dictionary");
        DDItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DDItemActionPerformed(evt);
            }
        });
        ExportMenu.add(DDItem);

        ImageItem.setText("Image");
        ExportMenu.add(ImageItem);

        FileMenu.add(ExportMenu);

        PrintItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        PrintItem.setText("Print");
        FileMenu.add(PrintItem);

        CloseItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        CloseItem.setText("Close");
        CloseItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseItemActionPerformed(evt);
            }
        });
        FileMenu.add(CloseItem);

        ExitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        ExitItem.setText("Exit");
        ExitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitItem);

        jMenuBar1.add(FileMenu);

        HelpMenu.setText("Help");

        HelpItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        HelpItem.setText("Help");
        HelpItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpItemActionPerformed(evt);
            }
        });
        HelpMenu.add(HelpItem);

        jMenuBar1.add(HelpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Ribbon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Ribbon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private javax.swing.JToggleButton[] buttons;
    private WorkArea workArea;
    private GraphicController gc;
    
    private void DecomposeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecomposeButtonActionPerformed
        // TODO add your handling code here:
        DecomposeButton.setSelected(false);
    }//GEN-LAST:event_DecomposeButtonActionPerformed

    private void ExternalOutputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExternalOutputButtonActionPerformed
        // TODO add your handling code here:
        if (!ExternalOutputButton.isSelected()) workArea.mode = 0; else workArea.mode = 6;
        System.out.println(workArea.mode);
        selectOne(ExternalOutputButton, buttons);
        System.out.println(DataProcessButton.isSelected() + " " + ExternalEntityButton.isSelected() + " " + ExternalOutputButton.isSelected());
    }//GEN-LAST:event_ExternalOutputButtonActionPerformed

    private void DataProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataProcessButtonActionPerformed
        // TODO add your handling code here:
        if (!DataProcessButton.isSelected()) workArea.mode = 0; else workArea.mode = 2;
        System.out.println(workArea.mode);
        selectOne(DataProcessButton, buttons);
        System.out.println(DataProcessButton.isSelected() + " " + ExternalEntityButton.isSelected() + " " + ExternalOutputButton.isSelected());
    }//GEN-LAST:event_DataProcessButtonActionPerformed

    private void DataStoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataStoreButtonActionPerformed
        // TODO add your handling code here:
        if (!DataStoreButton.isSelected()) workArea.mode = 0; else workArea.mode = 3;
        selectOne(DataStoreButton, buttons);
    }//GEN-LAST:event_DataStoreButtonActionPerformed

    private void DebugButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebugButtonActionPerformed
        // TODO add your handling code here:
        DebugButton.setSelected(false);
        if (workArea != null) workArea.debug(logArea);
    }//GEN-LAST:event_DebugButtonActionPerformed

    private void NewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewItemActionPerformed
        // TODO add your handling code here:
        workArea = new WorkArea(logArea);
        workArea.getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            javax.swing.KeyStroke.getKeyStroke(
                java.awt.event.KeyEvent.VK_DELETE, 0
            ), "deleteShape"
        );
        workArea.getActionMap().put("deleteShape", new deleteShape());
        workArea.mode = 0; 
        System.out.println(workArea.mode);
        WorkSpace.getViewport().add(workArea);
        WorkSpace.setVisible(true);
        this.setTitle("SADesignerLite - Untitled");
        jSplitPane2.setDividerLocation(jSplitPane2.getDividerLocation());
        gc = new GraphicController(workArea);
        for (javax.swing.JToggleButton b: buttons) b.setSelected(false);
        System.out.println(DataProcessButton.isSelected() + " " + ExternalEntityButton.isSelected() + " " + ExternalOutputButton.isSelected());
    }//GEN-LAST:event_NewItemActionPerformed

    private void DDItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DDItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DDItemActionPerformed

    private void logAreaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logAreaMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_logAreaMouseEntered

    private void selectOne(javax.swing.JToggleButton jtb, 
            javax.swing.JToggleButton[] jtbs) {
        for (javax.swing.JToggleButton b: jtbs) {
            if (b == jtb) {
                b.setSelected(b.isSelected());
            } else {
                b.setSelected(false);
            }
        }
    }
    
    private void DataFlowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataFlowButtonActionPerformed
        // TODO add your handling code here:
        if (!DataFlowButton.isSelected()) workArea.mode = 0; else workArea.mode = 4;
        selectOne(DataFlowButton, buttons);
    }//GEN-LAST:event_DataFlowButtonActionPerformed

    private void ExternalEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExternalEntityButtonActionPerformed
        // TODO add your handling code here:
        if (!ExternalEntityButton.isSelected()) workArea.mode = 0; else workArea.mode = 1;
        System.out.println(workArea.mode);
        selectOne(ExternalEntityButton, buttons);
        System.out.println(DataProcessButton.isSelected() + " " + ExternalEntityButton.isSelected() + " " + ExternalOutputButton.isSelected());
    }//GEN-LAST:event_ExternalEntityButtonActionPerformed

    private void LabelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabelButtonActionPerformed
        // TODO add your handling code here:
        if (!LabelButton.isSelected()) workArea.mode = 0; else workArea.mode = 7;
        selectOne(LabelButton, buttons);
    }//GEN-LAST:event_LabelButtonActionPerformed

    private void HelpItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpItemActionPerformed
        // TODO add your handling code here:
        HelpUI helpUI = new HelpUI();
        helpUI.setTitle("Help");
        helpUI.setVisible(true);
    }//GEN-LAST:event_HelpItemActionPerformed

    private void CloseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseItemActionPerformed
        // TODO add your handling code here:
        if (workArea == null || !workArea.isChanged || workArea.savePrompt()) {
            WorkSpace.getViewport().remove(workArea);
            jSplitPane2.setDividerLocation(jSplitPane2.getDividerLocation());
            WorkSpace.setVisible(false);
            this.setTitle("SADesignerLite");
        }
    }//GEN-LAST:event_CloseItemActionPerformed

    private void ExitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitItemActionPerformed
        // TODO add your handling code here:
        formWindowClosing(null);
    }//GEN-LAST:event_ExitItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (workArea == null || !workArea.isChanged || workArea.savePrompt()) {
            this.dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void SaveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveItemActionPerformed
        // TODO add your handling code here:
        //if (workArea.title == null) workArea.saveAs();
        //else 
        workArea.save();
    }//GEN-LAST:event_SaveItemActionPerformed

    private void SaveAsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsItemActionPerformed
        // TODO add your handling code here:
        workArea.saveAs();
    }//GEN-LAST:event_SaveAsItemActionPerformed

    private void OpenItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenItemActionPerformed
        // TODO add your handling code here:
       if (workArea!= null){
       // workArea.open();
        FileInputStream file;
        ObjectInputStream o;
        try{
        file = new FileInputStream("demo.dfd");
        o = new ObjectInputStream(file);
        WorkArea temp = (WorkArea)o.readObject();
        o.close();
        file.close();       
        } catch(IOException ex)
        {
            System.out.println("IOException is caught");
        }
        catch(ClassNotFoundException ex)
        {
            System.out.println("ClassNotFoundException is caught");
        }
        
      //  workArea = new WorkArea();
        workArea.getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            javax.swing.KeyStroke.getKeyStroke(
                java.awt.event.KeyEvent.VK_DELETE, 0
            ), "deleteShape"
        );
        workArea.getActionMap().put("deleteShape", new deleteShape());
        workArea.mode = 0; 
        System.out.println(workArea.mode);
        WorkSpace.getViewport().add(workArea);
        WorkSpace.setVisible(true);
        this.setTitle("SADesignerLite - Untitled");
        jSplitPane2.setDividerLocation(jSplitPane2.getDividerLocation());
        gc = new GraphicController(workArea);
        for (javax.swing.JToggleButton b: buttons) b.setSelected(false);
        System.out.println(DataProcessButton.isSelected() + " " + ExternalEntityButton.isSelected() + " " + ExternalOutputButton.isSelected());
    }//GEN-LAST:event_OpenItemActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CloseItem;
    private javax.swing.JMenuItem DDItem;
    private javax.swing.JToggleButton DataFlowButton;
    private javax.swing.JToggleButton DataProcessButton;
    private javax.swing.JToggleButton DataStoreButton;
    private javax.swing.JToolBar DebugBar;
    private javax.swing.JToggleButton DebugButton;
    private javax.swing.JLabel DebugText;
    private javax.swing.JToolBar DecomposeBar;
    private javax.swing.JToggleButton DecomposeButton;
    private javax.swing.JLabel DecomposeText;
    private javax.swing.JMenuItem ExitItem;
    private javax.swing.JMenu ExportMenu;
    private javax.swing.JToggleButton ExternalEntityButton;
    private javax.swing.JToggleButton ExternalOutputButton;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem HelpItem;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuItem ImageItem;
    private javax.swing.JLabel InsertShapesText;
    private javax.swing.JToggleButton LabelButton;
    private javax.swing.JScrollPane LogArea;
    private javax.swing.JMenuItem NewItem;
    private javax.swing.JMenuItem OpenItem;
    private javax.swing.JMenuItem PrintItem;
    private javax.swing.JPanel Ribbon;
    private javax.swing.JMenuItem SaveAsItem;
    private javax.swing.JMenuItem SaveItem;
    private javax.swing.JToolBar ShapeBar;
    private javax.swing.JScrollPane WorkSpace;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextArea logArea;
    // End of variables declaration//GEN-END:variables

    private class deleteShape extends javax.swing.AbstractAction {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent event) {
            System.out.println("Deleting");
            workArea.deleteShape();
        }
    }
}



